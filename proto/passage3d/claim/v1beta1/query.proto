syntax = "proto3";
package passage3d.claim.v1beta1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/v1beta1/coin.proto";
import "passage3d/claim/v1beta1/params.proto";

option go_package = "github.com/envadiv/passage3d/x/claim/types";

// Query defines the gRPC querier service.
service Query {
  // ModuleAccountBalance RPC returns the claim module account balance
  rpc ModuleAccountBalance(QueryModuleAccountBalanceRequest) returns (QueryModuleAccountBalanceResponse) {
    option (google.api.http).get = "/passage3d/claim/v1beta1/module_account_balance";
  }

  // Params RPC returns claim module params
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/passage3d/claim/v1beta1/params";
  }
}


// QueryModuleAccountBalanceRequest is the request type for the Query/ModuleAccountBalance RPC method.
message QueryModuleAccountBalanceRequest {}

// QueryParamsResponse is the response type for the Query/Params RPC method.
message QueryModuleAccountBalanceResponse {
  // params defines the parameters of the module.
  repeated cosmos.base.v1beta1.Coin module_account_balance = 1 [
    (gogoproto.moretags) = "yaml:\"coins\"",
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}


// QueryParamsRequest is the request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is the response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params defines the parameters of the module.
  Params params = 1 [(gogoproto.nullable) = false];
}

